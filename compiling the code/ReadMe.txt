All about compiling Monitor-automata:
======================================

To compile on the switch
=========================
Copy the OpenVswitch library onto the path /mnt/onl/data/libraries/openvswitch-2.3.1/include/openvswitch/
and the zlog configuration file onto the path /etc/zlog.configuration
Uncomment the line in monitor-automata.h  //#define opennsl
COmment the line #define CHECK_POLLING_ACCURACY in monitor-autoamta.h to not to compile the instrumentation code added for checking the polling accuracy.


To complie on the Linux machine for development purposes:
=========================================================

Update the Makefile.am file present in the path src/Makefile.am of the Monitor-automata code repository.

From

AM_CFLAGS += -I/mnt/onl/data/libraries/openvswitch-2.3.1/lib/ 
AM_CFLAGS += -I/mnt/onl/data/libraries/openvswitch-2.3.1/include/ 
AM_CFLAGS += -I/mnt/onl/data/libraries/openvswitch-2.3.1/include/openvswitch/

TO

AM_CFLAGS += -I/home/shrikanth/OVS/openvswitch-2.3.1/lib/ 
AM_CFLAGS += -I/home/shrikanth/OVS/openvswitch-2.3.1/include/ 
AM_CFLAGS += -I/home/shrikanth/OVS/openvswitch-2.3.1/include/openvswitch/


Where 

'shrikanth' in the above path -> could be replaced by your name or the name of the home folder owned by the user logged into the machine.

Commen the line in monitor-automata.h  //#define opennsl -57th line
Also remove -lopennsl from the Makefile.am file.
run autoreconf -iv
./configure
sudo make 
sudo make install

To start the first version of the code, use the command: Monitor-automata
To start the second version of the code, use the command: Monitor-automata-v2




All about compiling ofc-server:
===============================
The compilation for NETCONF server follows the same methodology irrespective of where it is done (switch or on an Ubuntu machine).
autoreconf -iv
./configure --disable-dbus PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
sudo make install

To start the NETCONF server:
sudo ofc-server -v 3 -> starts the server as a background process.
sudo ofc-server -f -v 3  -> starts the server as a foregroun process.



All about generating new data-model.
====================================
Make changes to the YANG file present in the monitoring-model folder presented with the DVD.
"monitoring-model.yang"

and from witin the folder monitoring-model run the below command.
lnctool --model /home/shrikanth/monitoring-model/monitoring-model.yang transapi --paths /home/shrikanth/monitoring-model/paths

This will generate files required for NETCONF server.
monitoring-model.yang
monitoring-model.yin
monitoring-model-config.rng
monitoring-model-gdefs-config.rng
monitoring-model-schematron.xsl
monitoring-model.c  --> This file is also generated with skeleton code. Merge the changes carefully into monitoring-model-transapi.c

For more information on lnctool refer to LIBNETCONF website: 
lnctool is generated when LIBNETCONF library is installed.



paths --> file contains the path to which a callback function will be generated by the lnctool. This will be used by the NETCONF server to trigger monitoring data model.
Merge the generated files with the files present at OFCONFIG/Mon-model/server-src/model 
Note that monitoring-model.c equivalent code is present in monitoring-model-transapi.c file within the folder OFCONFIG/Mon-model/server-src/server





